plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.diffplug.spotless' version '8.0.0'
}

group = 'com.shikshaspace'
version = '0.0.1-SNAPSHOT'
description = 'Production-grade reactive user service with Keycloak SSO'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    keycloakVersion = '26.0.0'
    mapstructVersion = '1.5.5.Final'
    lombokVersion = '1.18.32'
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Database
    implementation 'org.postgresql:r2dbc-postgresql:1.0.5.RELEASE'
    runtimeOnly 'org.postgresql:postgresql:42.6.0'

    // Migration
    implementation 'org.flywaydb:flyway-core:10.10.0'
    implementation 'org.flywaydb:flyway-database-postgresql:10.10.0'

    // Keycloak Admin Client
    implementation "org.keycloak:keycloak-admin-client:${keycloakVersion}"
    implementation 'jakarta.ws.rs:jakarta.ws.rs-api:3.1.0'
    implementation 'org.glassfish.jersey.core:jersey-client:3.1.3'
    implementation 'org.glassfish.jersey.inject:jersey-hk2:3.1.3'

    // Lombok & MapStruct
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // OpenAPI Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.5.0'

    // Monitoring
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // Dev Tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'io.projectreactor:reactor-test'
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"
}

tasks.named('compileJava') {
    options.compilerArgs += [
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.unmappedTargetPolicy=WARN'
    ]
}

tasks.named('test') {
    useJUnitPlatform()
}

springBoot {
    buildInfo()
}

// Spotless code formatting configuration
spotless {
    java {
        target 'src/**/*.java'
        googleJavaFormat('1.17.0')
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()

        // Exclude generated files
        targetExclude 'build/**', '**/generated/**'
    }
}
